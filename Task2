#Personal Budget Tracker
#Allow users to enter their income and the expenses along with 
#the respective categories, and display the categories, remaining budget
#and spending trends
#The transactions are stored in a file
import pandas as pd
import matplotlib.pyplot as plt

income=0
expenses=[]
rem=0

#Allow user to add income
def add_inc():
  global income  #global variable
  amt=int(input("Enter income: "))
  income+=amt  #increment amount

#Allow user to input expense and category
def add_exp():
  cat=input("Enter category: ")
  exp=int(input("Enter expense: "))
  expenses.append((cat,exp))  #Store data in list 'expenses'

#Display expenses and respective category
def disp_exp():
  for cat,exp in expenses:
    print("Category: ",cat, "Expense: ",exp)
  
#Calculate remaining budget by deducting expense amount from income
def calc_budget():
  global rem
  tot=0  #tot variable stores total expense amount
  for cat,exp in expenses:
    tot+=exp
  rem=income-tot  #rem variable gives remaining budget
  print("Remaining budget: ",rem)

#Store results of the transactions in a file 'tran.txt'
def store():
  with open("tran.txt",'w') as file:
    file.write(f"{income}")     #Income is entered into file
    for cat,exp in expenses:
      file.write(f"\n{cat},{exp}")    
      #Category and expense is written into file


#Load data that is stored in a file 'tran.txt'
def load():
  global income
  global rem
  try:
    with open("tran.txt",'r') as file:
      income=int(file.readline().strip())  #Use split to remove trailing and 
                                           #leading white spaces
      for line in file:
        cat,exp=line.strip().split(',')
        expenses.append((cat,int(exp)))
      
  except FileNotFoundError:       #If no file exists, create an empty one
    pass

def display_graph():
    # Create a DataFrame from your expenses list
    df = pd.DataFrame(expenses, columns=['Category', 'Expense'])

    # Group by category and sum the expenses
    grouped = df.groupby('Category')['Expense'].sum()

    # Create a bar chart
    grouped.plot(kind='bar')
    plt.xlabel('Category')
    plt.ylabel('Expense')
    plt.title('Category vs. Expense')
    plt.xticks(rotation=45)  # Rotate x-axis labels for readability

    plt.show()  # Display the graph
  
#Main function
def main():
  
  while(1):    #Infinite loop
    print("\n\nMenu \n 1.Add income \n 2.Add expense \n 3.Display expenses \n 4.Display budget \n 5.Save and display graph")
    
    ch=int(input("Enter choice: "))

    if ch==1:
      add_inc()               #Add income
    elif ch==2:
      add_exp()               #Add expenses 
    elif ch==3:
      disp_exp()              #Display expenses
    elif ch==4:
      calc_budget()           #Calculate budget
    elif ch==5:
      store()  
      display_graph()               #Store results in file
      break
    else:
      print("Invalid input")  #Any other input

#Call main function
if __name__=="__main__":
  main()
